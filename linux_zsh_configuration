# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=/home/rain/.oh-my-zsh
export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"
# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="agnoster"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#JAVA Configuration
export JAVA_HOME=/opt/jdk1.8.0_65
export PATH=$PATH:$JAVA_HOME/bin
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar 

# aliases
alias anzhuang='sudo apt-get install'
alias shengji='sudo apt-get upgrade'
alias apachestart='sudo service apache2 start'
alias apachestop='sudo service apache2 stop'
alias mysqlstart='sudo service mysql start'
alias mysqlstop='sudo service mysql stop'
alias guanji='sudo shutdown -h now'
alias gitpush='git push origin master'
alias zhuxiao='gnome-session-quit'
export PYTHONPATH="/home/rain"
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define UINT unsigned int
#define PI 3.14159265
#define CIRCURL (2*PI)
typedef struct HexagonPoint
{
     float radis;
     UINT layer;
     UINT serial_num;
 }HexagonPoint;


static UINT g_maxValue=0;

int InitCellularDistrict(int iMaxSeqValue)
{
	if( iMaxSeqValue>=1 && iMaxSeqValue<=100000 )
	{
		g_maxValue=iMaxSeqValue;
		return 0;
	}
	else
		return -1;
}

UINT maxValue(UINT layer)						    
{
	/*
	方式1：递归求解,每层最大值，比上一层多6i
	
	if(layer==0)
		return 1;
	else
		return 6*layer+maxValue(layer-1);
	
	方式2：循环求解，每层个数比上一层多6个，原点不算
	
	UINT temp=1;
	for (UINT i = 1; i <=layer ; ++i)
	{
		temp+=6*i;
	}
	return temp;
	*/
	//方式3：利用公司直接求解，每层最大值为6i(i+1)/2+1 => 3i(i+1)+1
	return 3*layer*(layer+1)+1;

}

void initHexagonPoint( UINT num, HexagonPoint* point )
{
	if(point==NULL||num<=0)
		return;
	UINT	tempLayer;
	UINT	maxValueofLayer;

	if(num==1)
	{
		maxValueofLayer 	= 1;
		point->serial_num	= num;
		point->layer 		= 0;
		point->radis 		= 0;
	}
	else
	{
		for ( tempLayer = 1; maxValue( tempLayer ) < num; tempLayer++ );
		maxValueofLayer 	= maxValue( tempLayer );
		point->serial_num	= num;
		point->layer 		= tempLayer;
		point->radis 		= CIRCURL * (num - (maxValueofLayer - 6 * tempLayer) ) / (6 * tempLayer);
	}
}
int GetShortestPathLength(int iFirstValue, int iSecondValue)
{
	if(iFirstValue<=0||iSecondValue==0)
		return -1;
	if(iFirstValue==iSecondValue)
		return 0;

	HexagonPoint* point1=(HexagonPoint*)malloc(sizeof(HexagonPoint));
	HexagonPoint* point2=(HexagonPoint*)malloc(sizeof(HexagonPoint));

	initHexagonPoint(iFirstValue, point1);
	initHexagonPoint(iSecondValue, point2);
	printf("%d\t%d\t%f\n",point1->serial_num,point1->layer,point1->radis);
	printf("%d\t%d\t%f\n",point2->serial_num,point2->layer,point2->radis);
	double rad1=point1->radis;
	double rad2=point2->radis;
	// use formal：|AB|=√[ρ1²+ρ2²-2ρ1ρ2cos(θ1-θ2)]
	double result=sqrt(pow((double)rad1,2)+pow((double)rad2,2)+cos((double)point1->radis-(double)point2->radis)*2*rad1*rad2);
	printf("%f\n",result);

	free(point1);point1=NULL;
	free(point2);point2=NULL;
	return 0;
}

int main(int argc, char **argv)
{
	GetShortestPathLength(30,19);
	return 0;
}

